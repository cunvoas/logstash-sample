input {
	stdin {
		type => "log4j"    
	}
	file {
		# Apache access example
		path => "D:/access.log"
		type => "apache.access"
	}
	#file {
	#	path => "D:/servers/jboss/5.1.0/server/jbossdevl14/log/*.log"
	#	type => "jboss"
	#	codec => multiline {
	#		pattern => "^%{JBOSS_DATESTAMP} "
	#		negate => true
	# 		what => previous	 		
	#	}
	#}
	#file {
	#	path => "D:/servers/tomcat/6.0.14/logs/*.log"
	#	type => "tomcat"
	#	codec => multiline {
	#		pattern => "^%{TOMCAT_DATESTAMP} "
	#		negate => true
	# 		what => previous
	# 		charset => "ISO-8859-1"	 		
	#	}
	#}
}

filter {
	if [type] == "jboss" {
		grok {
			match => [ "message", "%{JBOSSLOG}" ]
			add_tag => ["jbosslog"]
		}
	} else if [type] == "tomcat" {
		grok {
			match => [ "message", "%{TOMCATLOG}" ]
			add_tag => ["tomcatlog"]
		}
	} else if [type] in ["apache.access","log4j"] {
		grok {
			match => { "message" => "%{COMBINEDAPACHELOG}" }
			add_tag => ["access"]						
		}
		mutate {
			convert => [ "httpreponse", "integer" ]
		}
		geoip {
			source => "clientip"
		}
	}
	
	if [clientip]  {
		geoip {
			source => "clientip"
			target => "geoip"
			add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ]
			add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ]			
		}
		mutate {
			convert => [ "[geoip][coordinates]", "float" ]
		}
	}
}

output {
	elasticsearch { host => localhost }
	#rabbitmq {  
	#	host => localhost
	#	exchange_type => fanout
	#	exchange => elasticsearch
	#}
	#elasticsearch_river {  
	#	es_host => "127.0.0.1"
	#	#es_port => 9200
	#	rabbitmq_host => "127.0.0.1"
	#	#rabbitmq_port => 5672
	#	#user => guest
	#	#password => guest
	#	#exchange_type => fanout
	#	#exchange => elasticsearch
	#	#queue => elasticsearch
	#	#key => elasticsearch
	#}
	stdout {}
}
